# prepare template server which contains
# ubuntuserver + jdk8 + spring-rest-api app

az vm create \
    --resource-group template \
    --name product-service \
    --image UbuntuLTS \
    --admin-username ubuntu \
    --ssh-key-value azure.pem.pub


# add a separate disk for data 
az vm disk attach \
    --resource-group template \
    --vm-name product-service \
    --disk data-disk \
    --sku Premium_LRS \
    --new

# then u have to Mount the data-disk to be able to use

# open ports
az vm open-port --port 8080 --resource-group template --name product-service

#connect to instance
#enter .pem file password 
#ssh -i .pem ADMIN_USER_NAME@PUBLIC_IP
# ssh -i azure.pem ubuntu@`az vm show -d -g template -n product-service --query publicIps -o tsv`

# you can use cloud-init or below run-command
az vm run-command invoke \
    -g template \
    -n product-service \
    --command-id RunShellScript --scripts "sudo apt update && sudo apt install -y openjdk-8-jdk && git clone https://github.com/tansudasli/git-sandbox.git && cd git-sandbox && ./gradlew bootRun"


echo 'app is up'

# setup (run inside instance!)
# sudo apt update
# sudo apt install -y openjdk-8-jdk
# git clone https://github.com/tansudasli/git-sandbox.git
# ./git-sandbox/gradlew bootRun &

# test rest-api
# curl 13.74.157.26:8080
